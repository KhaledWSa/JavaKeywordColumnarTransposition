package discreteproject;

import discreteproject.NewJFrame;
import java.util.ArrayList;
import java.util.Collections;

/**
 *
 * This is the encoder frame that holds the text boxes,
 * which accpets a keyword and an message to be encoded
 * then encode the message using the encode button.
 *
 *@aothor Mohannad A. Alnahhas,Mohammed A. Alsaggaf, Khaled W. Saqi
 *@version 1.0 
 */
public class EncodeFrame extends javax.swing.JFrame {
	
	// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EncodeButton;
    private javax.swing.JTextArea SolutionBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField keywordField;
    private javax.swing.JLabel keywordLabel;
    private javax.swing.JTextField sentenceField;
    // End of variables declaration//GEN-END:variables
	
    /**
     * Creates new form EncodeFrame
     */
    public EncodeFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sentenceField = new javax.swing.JTextField();
        keywordField = new javax.swing.JTextField();
        keywordLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SolutionBox = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        EncodeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 102));

        jPanel1.setBackground(new java.awt.Color(230, 230, 234));

        keywordLabel.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        keywordLabel.setForeground(new java.awt.Color(33, 144, 159));
        keywordLabel.setText(" Keyword");

        jLabel3.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(33, 144, 159));
        jLabel3.setText("Sentence");

        jLabel1.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(33, 144, 159));
        jLabel1.setText("Encoded Message");

        SolutionBox.setColumns(20);
        SolutionBox.setFont(new java.awt.Font("Leelawadee UI", 1, 13)); // NOI18N
        SolutionBox.setLineWrap(true);
        SolutionBox.setRows(5);
        SolutionBox.setWrapStyleWord(true);
        jScrollPane1.setViewportView(SolutionBox);

        jLabel2.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(33, 144, 159));
        jLabel2.setText("Back To Menu");
		
		//Back To menu label action handler
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        EncodeButton.setBackground(new java.awt.Color(230, 230, 234));
        EncodeButton.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        EncodeButton.setForeground(new java.awt.Color(254, 74, 73));
        EncodeButton.setText("Encode");
        EncodeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		
		//encode button action handler
        EncodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncodeButtonActionPerformed(evt);
            }
        });

		//pane prefrences
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(keywordLabel)
                            .addComponent(jLabel3))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sentenceField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EncodeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)))
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sentenceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(keywordLabel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(EncodeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel1)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
		
		this.setVisible(false);
		new NewJFrame().setVisible(true);
		
    }//GEN-LAST:event_jLabel2MouseClicked

	/**
	 *This function recives encode button event and handle it.
	 *The function will take the keyword from the keywordField and the messgae from sentenceField,
	 *then perform the encryption algorithm.
	 *
	 *@aothor Mohannad A. Alnahhas,Mohammed A. Alsaggaf, Khaled W. Saqi
	 *@version 1.0
	 *
	 */
    private void EncodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncodeButtonActionPerformed
		
		//Getting keyword from the keywordField
		String Word = keywordField.getText();
		Word = Word.toUpperCase();
		
		ArrayList<Character> keyword = new ArrayList<Character>();//Character keyword ArrayList

		//Insert all the Word characters into the keyword ArrayList
		for (int i=0; i<(Word.length());i++) {
				keyword.add(Word.charAt(i));
			}
		
		//Getting message from the sentenceField
		String Sentence2 = sentenceField.getText().replaceAll(" ", "");
		Sentence2 = Sentence2.toUpperCase();
		
		char[][]Coding=encoderArray ( Sentence2, Word );//Perform the first stage of encoding
		char[][] Sortedmatrix = Sort(Coding,keyword);//Perform the second stage of encoding
		
		String EncodedMessage="";

		for(int C=0;C<Sortedmatrix[0].length;C++) {
				for(int R=0;R<Sortedmatrix.length;R++) {
					EncodedMessage=EncodedMessage+Sortedmatrix[R][C]; //insert the encoded massage in a string
				}
			}
			
		SolutionBox.setText("The Encoded Message is: "+ EncodedMessage+ "\n\n");
		
		for(int R=0;R<Sortedmatrix.length;R++) {
				for(int C=0;C<Sortedmatrix[0].length;C++) {
					SolutionBox.setText(SolutionBox.getText()+Coding[R][C]+"  ");
				}
				SolutionBox.setText(SolutionBox.getText()+ "\n");
			}
		SolutionBox.setText(SolutionBox.getText()+ "\n\n");
		
		for(int R=0;R<Sortedmatrix.length;R++) {
				for(int C=0;C<Sortedmatrix[0].length;C++) {
					SolutionBox.setText(SolutionBox.getText()+Sortedmatrix[R][C]+"  ");
				}
				SolutionBox.setText(SolutionBox.getText()+ "\n");
			}
			
    }//GEN-LAST:event_EncodeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncodeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncodeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncodeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncodeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncodeFrame().setVisible(true);
            }
        });
    }

   /**
	 *First Stage of the encryption 
	 *by putting the kyeword and message in array of size message.length/keyword.length*keyword.length.
	 *
	 *@aothor Mohannad A. Alnahhas,Mohammed A. Alsaggaf, Khaled W. Saqi
	 *@return char[][] , Coding
	 */
	public static char[][] encoderArray (String Sentence2,String Word ){
		
		char[][] Coding = new char[(int)Math.ceil((double)Sentence2.length()/Word.length())][Word.length()];
			
			//Start by inserting "X" to all of the array
			for(int R=0;R<Math.ceil((double)Sentence2.length()/Word.length());R++) {
				for(int C=0; C<Word.length();C++) {
					Coding[R][C]='X';
				}
			}
			
			int indicator=0;
			int permission=0;
			//System.out.println(keyword);
			
			//indicates the array cells with the message letters
			for(int R=0;R<Math.ceil((double)Sentence2.length()/Word.length());R++) {
				for(int C=0; C<Word.length();C++) {
					Coding[R][C]= Sentence2.charAt(indicator);
					if (indicator<Sentence2.length()-1) {
						indicator++;
						
					
						}
					else { permission++; break;}
				}
				if (permission==1) {break;}
			}
			
			//printing
			for (int R=0; R<Math.ceil(((double)Sentence2.length()/Word.length()));R++) {
				for(int C=0; C<Word.length();C++) {
					System.out.print(Coding[R][C]+"  ");
				}
				System.out.println();
			}
			
			return Coding;
	}
	/**
	 *Second Stage of the encryption, 
	 *by sorting the message  according to the keyword's alphabetical order.
	 *
	 *@aothor Mohannad A. Alnahhas,Mohammed A. Alsaggaf, Khaled W. Saqi
	 *@return char[][] , MixedMatrix
	 */
	public static char[][] Sort(char[][] MatrixSent,ArrayList<Character> keyword){
		
		char[][] MixedMatrix = new char[MatrixSent.length][MatrixSent[0].length];
		ArrayList<Character> keywordSorted = new ArrayList<Character>();
		
		keywordSorted.addAll(keyword);//add keyword on the keywordSorted
		
		Collections.sort(keywordSorted);//Sort the KeywordSorted
		
		for (int i=0; i<keyword.size();i++) {
			for(int j=0;j<keywordSorted.size();j++) {
				
				if(keywordSorted.get(i).equals(keyword.get(j))) {//Specify The indexes
					for(int R=0;R<MatrixSent.length;R++) {
						
							MixedMatrix[R][i]=MatrixSent[R][j]; /* Insert values on the Encoded Matrix ,  R:Rows ,  
							i: shows which index to insert on , j:shows which index to take values from */
					}
				}
			}

		}
		
		return MixedMatrix;
	}
}
